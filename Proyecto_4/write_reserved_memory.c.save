    #include <errno.h>
    #include <fcntl.h>
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <sys/mman.h>

    #define RESERVED_MEMORY_OFFSET  0x1ff00000     /* Offset */

    int main() {
            int fd;
            char *reserved_memory; | PROT_WRITE
            char * reserved_memory2;
            char *buffer = "Hello World!";
            char *buffer2;

            fd = open("/dev/mem", O_RDWR | O_SYNC);
            /* Returns a pointer to the 4GB point in /dev/mem - the start of my reserved memory. Only mapping 4096 bytes. */
            reserved_memory = (char *) mmap(0, 4, PROT_READ | PROT_WRITE, MAP_FILE | MAP_SHARED, fd, RESERVED_MEMORY_OFFSET);
            reserved_memory2 = (char *) mmap(0, 4, PROT_READ , MAP_FILE | MAP_SHARED, fd, RESERVED_MEMORY_OFFSET);


            printf("Hola\n");
            printf("fffe\n");
            printf("data: %s\n", buffer);
            printf("Addr: %x\n", *buffer);
            printf("Addr2: %x", *reserved_memory);

            if (reserved_memory == MAP_FAILED) {
                    printf("Failed to creating mapping.\n");
                    printf("ERRNO: %s\n", strerror(errno));
                    return -1;
            }
            sprintf(reserved_memory, "%s", buffer);
            sprintf(buffer2, "%s", reserved_memory2);
            //cout << "data: \n" << *buffer << endl;
            //cout << "Addr: \n" << buffer << endl;
            return 0;
    }
